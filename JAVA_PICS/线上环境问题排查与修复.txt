
问题排查定位：
	1. 检查CPU、内存的使用情况 top
	2. 使用Ping检查服务器网络
	3. 使用 tailf /var/log/message 查看操作系统日志
	4. 检查业务日志(可能没有)
	5. JVM工具使用
			jcmd -> 查看
			jmap -> 检查内存是否占满
			jstack -> 检查线程

	jstack 一定时间区间 取不同的结果做对比分析可疑线程/代码

系统设计原则：
	容错性
	构建弹性应用

性能测试(JMeter) -> 问题定位 -> 架构代码分析

可以使用多线程对业务并行处理(无相互依赖的业务才可以并行处理)

多线程优化后：
	提升了用户体能(响应时间 —— RT降低了)
	单台服务器的业务处理量降低(CPU资源限制) —— 使用集群
	PS：需要控制线程数量
